aspect TypeMap {

  public Integer Program.typeCount = 0;

  public Map<Integer,TypeDecl> Program.typeMap = new HashMap<Integer,TypeDecl>();

  public Integer Program.getTypeNum(TypeDecl type) {
    Integer count = typeCount++;
    typeMap.put(count, type);
    return count;
  }

  syn lazy Integer TypeDecl.typeNum() = program().getTypeNum(this);

  public String Program.printTypeMap() {
    StringBuilder s = new StringBuilder();
    s.append("{");
    int i = 1;
    for (Integer key: typeMap.keySet()) {
      s.append(key);
      s.append("=");
      s.append(typeMap.get(key).verFullName());
      if (i != typeMap.size()) {
        s.append(", ");
      }
      i++;
    }
    s.append("}");
    return s.toString();
  }

}