aspect VersionVariableScope {

  syn lazy Access VersionVarArgument.decl() {
    SimpleSet<Access> decls = lookupVersionVariable(getID());
    if (decls.isSingleton()) {
      return decls.singletonValue();
    }
    throw new Error("Multiple version variables found for " + getID());
  }

  inh SimpleSet<Access> VersionVarArgument.lookupVersionVariable(String name);
  inh SimpleSet<Access> GenericVersionMethodDecl.lookupVersionVariable(String name);

  eq Program.getChild().lookupVersionVariable(String name) = emptySet();

  eq GenericVersionClassDecl.getBodyDecl(int i).lookupVersionVariable(String name) {
    SimpleSet<Access> list = emptySet();
    for (VersionVariable verVar: getVersionVariableList()) {
      if (verVar.getID().equals(name)) {
        list = list.add(verVar);
      }
    }
    return list;
  }

  eq GenericVersionMethodDecl.getBlock().lookupVersionVariable(String name) {
    SimpleSet<Access> list = emptySet();
    for (VersionVariable verVar: getVersionVariableList()) {
      if (verVar.getID().equals(name)) {
        list.add(verVar);
      }
    }
    if (!list.isEmpty()) {
      return list;
    }
    return lookupVersionVariable(name);
  }

}