
public interface Point {
  public Point inverse(Point_Factory V);

  public Point mirror(Point_Factory V);
}

public interface Point_Factory {
  public Point make(int x, int y);
}

public class Point_v2 implements Point {
  public int x;

  public int y;

  public Point_v2(int x, int y) {
    this.x = x;
    this.y = y;
  }

  public Point inverse(Point_Factory V) {
    return V.make(y, x);
  }

  public Point mirror(Point_Factory V) {
    return null;
  }
}

public class Point_v2_Factory implements Point_Factory {
  public Point make(int x, int y) {
    return new Point_v2(x, y);
  }
}

public class Point_v1 implements Point {
  public int x;

  public int y;

  public Point_v1(int x, int y) {
    this.x = x;
    this.y = y;
  }

  public Point mirror(Point_Factory V) {
    return V.make(y, x);
  }

  public Point inverse(Point_Factory V) {
    return null;
  }
}

public class Point_v1_Factory implements Point_Factory {
  public Point make(int x, int y) {
    return new Point_v1(x, y);
  }
}
